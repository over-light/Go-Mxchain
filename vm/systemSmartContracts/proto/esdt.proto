syntax = "proto3";

package proto;

option go_package = "systemSmartContracts";
option (gogoproto.stable_marshaler_all) = true;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

message ESDTData {
    bytes OwnerAddress   = 1 [(gogoproto.jsontag) = "OwnerAddress"];
    bytes TokenName      = 2 [(gogoproto.jsontag) = "TokenName"];
    bool  Mintable       = 3 [(gogoproto.jsontag) = "Mintable"];
    bool  Burnable       = 4 [(gogoproto.jsontag) = "Burnable"];
    bool  CanPause       = 5 [(gogoproto.jsontag) = "CanPause"];
    bool  CanFreeze      = 6 [(gogoproto.jsontag) = "CanFreeze"];
    bool  CanWipe        = 7 [(gogoproto.jsontag) = "CanWipe"];
    bool  Upgradable     = 8 [(gogoproto.jsontag) = "CanUpgrade"];
    bool  CanChangeOwner = 9 [(gogoproto.jsontag) = "CanChangeOwner"];
    bool  IsPaused       = 10 [(gogoproto.jsontag) = "IsPaused"];
    bytes MintedValue    = 11 [(gogoproto.jsontag) = "MintedValue", (gogoproto.casttypewith) = "math/big.Int;github.com/ElrondNetwork/elrond-go/data.BigIntCaster"];
    bytes BurntValue     = 12 [(gogoproto.jsontag) = "BurntValue", (gogoproto.casttypewith) = "math/big.Int;github.com/ElrondNetwork/elrond-go/data.BigIntCaster"];
}

message ESDTConfig {
    bytes OwnerAddress        = 1 [(gogoproto.jsontag) = "OwnerAddress"];
    bytes BaseIssuingCost     = 2 [(gogoproto.jsontag) = "BaseIssuingCost", (gogoproto.casttypewith) = "math/big.Int;github.com/ElrondNetwork/elrond-go/data.BigIntCaster"];
    uint32 MinTokenNameLength = 3 [(gogoproto.jsontag) = "MinTokenNameLength"];
    uint32 MaxTokenNameLength = 4 [(gogoproto.jsontag) = "MaxTokenNameLength"];
}

// This file holds the data structures related with the functionality of a shard block
//
// MiniBlock structure represents the body of a transaction block, holding an array of miniblocks
// each of the miniblocks has a different destination shard
// The body can be transmitted even before having built the heder and go through a prevalidation of each transaction

syntax = "proto3";

package proto;

option go_package = "transaction";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// Transaction holds all the data needed for a value transfer or SC call
message Transaction {
	uint64   Nonce     = 1 [(gogoproto.jsontag) = "nonce"];
	bytes    Value     = 2 [(gogoproto.jsontag) = "value", (gogoproto.customtype) = "github.com/ElrondNetwork/elrond-go/data.ProtoBigInt"]; 
	bytes    RcvAddr   = 3 [(gogoproto.jsontag) = "receiver"];
	bytes    SndAddr   = 4 [(gogoproto.jsontag) = "sender"];
	uint64   GasPrice  = 5 [(gogoproto.jsontag) = "gasPrice,omitempty"];
	uint64   GasLimit  = 6 [(gogoproto.jsontag) = "gasLimit,omitempty"];
	string   Data      = 7 [(gogoproto.jsontag) = "data,omitempty"];
	bytes    Signature = 8 [(gogoproto.jsontag) = "signature,omitempty"];
}

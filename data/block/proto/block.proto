// This file holds the data structures related with the functionality of a shard block
//
// MiniBlock structure represents the body of a transaction block, holding an array of miniblocks
// each of the miniblocks has a different destination shard
// The body can be transmitted even before having built the heder and go through a prevalidation of each transaction

syntax = "proto3";

package proto;

option go_package = "block";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// Type identifies the type of the block
enum Type {
	TxBlock  = 0;
	StateBlock  = 1;
	PeerBlock  = 2;
	SmartContractResultBlock  = 3;
	RewardsBlock  = 4;
	InvalidBlock  = 5;
}

message MiniBlock {
	repeated bytes TxHashes        = 1;
	uint32         ReceiverShardID = 2;
	uint32         SenderShardID   = 3;
	Type           Type            = 4;
}

message MiniBlockHeader  {
	bytes  Hash            = 1;
	uint32 SenderShardID   = 2; 
	uint32 ReceiverShardID = 3; 
	uint32 TxCount         = 4; 
	Type   Type            = 5;
}

// PeerChange holds a change in one peer to shard assignation
message PeerChange {
	bytes  PubKey       = 1;
	uint32 ShardIdDest  = 2; 
}

// Header holds the metadata of a block. This is the part that is being hashed and run through consensus.
// The header holds the hash of the body and also the link to the previous block header hash
message Header  {
	uint64                   Nonce                  = 1;
	bytes                    PrevHash               = 2;
	bytes                    PrevRandSeed           = 3;
	bytes                    RandSeed               = 4;
	bytes                    PubKeysBitmap          = 5;
	uint32                   ShardID                = 6;
	uint64                   TimeStamp              = 7;
	uint64                   Round                  = 8;
	uint32                   Epoch                  = 9;
	Type                     BlockBodyType          = 10;
	bytes                    Signature              = 11;
	bytes                    LeaderSignature        = 12;
	repeated MiniBlockHeader MiniBlockHeaders       = 13 [(gogoproto.nullable) = false];
	repeated PeerChange      PeerChanges            = 14 [(gogoproto.nullable) = false];
	bytes                    RootHash               = 15;
	bytes                    ValidatorStatsRootHash = 16;
	repeated bytes           MetaBlockHashes        = 17;
	uint32                   TxCount                = 18;
}

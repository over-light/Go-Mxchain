// Code generated by capnpc-go. DO NOT EDIT.

package block

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

// Block of data, containing hashes of transaction
type Block struct{ capnp.Struct }

// Block_TypeID is the unique identifier for the type Block.
const Block_TypeID = 0x9c7d523b025c5d0c

func NewBlock(s *capnp.Segment) (Block, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Block{st}, err
}

func NewRootBlock(s *capnp.Segment) (Block, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Block{st}, err
}

func ReadRootBlock(msg *capnp.Message) (Block, error) {
	root, err := msg.RootPtr()
	return Block{root.Struct()}, err
}

func (s Block) String() string {
	str, _ := text.Marshal(0x9c7d523b025c5d0c, s.Struct)
	return str
}

func (s Block) MiniBlocks() (Block_MiniBlock_List, error) {
	p, err := s.Struct.Ptr(0)
	return Block_MiniBlock_List{List: p.List()}, err
}

func (s Block) HasMiniBlocks() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Block) SetMiniBlocks(v Block_MiniBlock_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewMiniBlocks sets the miniBlocks field to a newly
// allocated Block_MiniBlock_List, preferring placement in s's segment.
func (s Block) NewMiniBlocks(n int32) (Block_MiniBlock_List, error) {
	l, err := NewBlock_MiniBlock_List(s.Struct.Segment(), n)
	if err != nil {
		return Block_MiniBlock_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Block_List is a list of Block.
type Block_List struct{ capnp.List }

// NewBlock creates a new list of Block.
func NewBlock_List(s *capnp.Segment, sz int32) (Block_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Block_List{l}, err
}

func (s Block_List) At(i int) Block { return Block{s.List.Struct(i)} }

func (s Block_List) Set(i int, v Block) error { return s.List.SetStruct(i, v.Struct) }

func (s Block_List) String() string {
	str, _ := text.MarshalList(0x9c7d523b025c5d0c, s.List)
	return str
}

// Block_Promise is a wrapper for a Block promised by a client call.
type Block_Promise struct{ *capnp.Pipeline }

func (p Block_Promise) Struct() (Block, error) {
	s, err := p.Pipeline.Struct()
	return Block{s}, err
}

type Block_MiniBlock struct{ capnp.Struct }

// Block_MiniBlock_TypeID is the unique identifier for the type Block_MiniBlock.
const Block_MiniBlock_TypeID = 0xc790ef4f274e678f

func NewBlock_MiniBlock(s *capnp.Segment) (Block_MiniBlock, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Block_MiniBlock{st}, err
}

func NewRootBlock_MiniBlock(s *capnp.Segment) (Block_MiniBlock, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Block_MiniBlock{st}, err
}

func ReadRootBlock_MiniBlock(msg *capnp.Message) (Block_MiniBlock, error) {
	root, err := msg.RootPtr()
	return Block_MiniBlock{root.Struct()}, err
}

func (s Block_MiniBlock) String() string {
	str, _ := text.Marshal(0xc790ef4f274e678f, s.Struct)
	return str
}

func (s Block_MiniBlock) TxHashes() (capnp.DataList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.DataList{List: p.List()}, err
}

func (s Block_MiniBlock) HasTxHashes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Block_MiniBlock) SetTxHashes(v capnp.DataList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewTxHashes sets the txHashes field to a newly
// allocated capnp.DataList, preferring placement in s's segment.
func (s Block_MiniBlock) NewTxHashes(n int32) (capnp.DataList, error) {
	l, err := capnp.NewDataList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.DataList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s Block_MiniBlock) DestShardID() uint32 {
	return s.Struct.Uint32(0)
}

func (s Block_MiniBlock) SetDestShardID(v uint32) {
	s.Struct.SetUint32(0, v)
}

// Block_MiniBlock_List is a list of Block_MiniBlock.
type Block_MiniBlock_List struct{ capnp.List }

// NewBlock_MiniBlock creates a new list of Block_MiniBlock.
func NewBlock_MiniBlock_List(s *capnp.Segment, sz int32) (Block_MiniBlock_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Block_MiniBlock_List{l}, err
}

func (s Block_MiniBlock_List) At(i int) Block_MiniBlock { return Block_MiniBlock{s.List.Struct(i)} }

func (s Block_MiniBlock_List) Set(i int, v Block_MiniBlock) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Block_MiniBlock_List) String() string {
	str, _ := text.MarshalList(0xc790ef4f274e678f, s.List)
	return str
}

// Block_MiniBlock_Promise is a wrapper for a Block_MiniBlock promised by a client call.
type Block_MiniBlock_Promise struct{ *capnp.Pipeline }

func (p Block_MiniBlock_Promise) Struct() (Block_MiniBlock, error) {
	s, err := p.Pipeline.Struct()
	return Block_MiniBlock{s}, err
}

const schema_ec208700833b2f3f = "x\xda\\\x8f\xbd\xaa\x13A\x1c\xc5\xcf\x99\xdd5)\x12" +
	"MX!\x8d\xc1-\x04\x13\x10C\xb0\xd1\xa4\xc8\x07)" +
	"T\x8cfb'*L6_\xcb&\xb3!\xbb\xa0\x8d" +
	"\x8d\x16\x82\x8d\x82\xad v6\x16>\x80\xa5\xf8\x06>" +
	"\xc4\xe5B\x1ea.\xbb\x97$\x97[\xcd\xcc\x7f\xfe\xe7" +
	"\xfc\xce)\xfd\xec\x8a\xa6\x13\x09@\xdep\xae\x98\xc2\xab" +
	"\x97\xa2=~\xf7\x0d\xe5\x0aw\x9dF\xfb\xc3G\xef\xd4" +
	"a\x0ep\xab<q\xeb\xac\xb8\x0fx\xd3]\xb3\x03\x9a" +
	"\xcf\x8b\xa7\xb7\x9f\xed\xbe\xfc\x83\xac\x92Ge\xb6~\xef" +
	"\x07[t\x7fg\xca_|\x83\xfbf\xaa\x12\xd5\x98\xac" +
	"\"\xe1\x87\xe9\xe1\x87w}\xb5\xd1\x9bV\xffZ\xfa\x90" +
	"6/\x18\x9696\xc3@\x07\xfdU\xe4\x83\xe9\xa70" +
	"\xaf\xbf~\x97\x7f\xfe\x7f\xfa\x0bi\x0b\xf6n\x91\x05\xa0" +
	"\xc9\xf74\xe9R\xe8Es\xc7K\x11w<?\xd2\x89" +
	"\x0at\xa0\x17\xdeR\xc5\xcbY\xecEs/\xd9*\x1d" +
	"+?\x09\"\x0d@\xda\x96\x0d\xd8\x04\xca\xc5\x17\x80," +
	"X\x945A\xb3\xde3\xad0\xe6Upd\x91\xa5c" +
	",0\x1d\x1e\x9aX\x97\x9bd\xf7a\xa0;\x99I8" +
	"\"e\xfe\x00\xaa?\x06d\xcd\xa2\x1c\x08\x92\xd7\x99\xce" +
	"z\x13@v-\xca'\x82&y\xfb0\x8b\x0b`\xcf" +
	".B\x9c\x13gq\xf2|\xa9\xb6\xc8M\x1f\x0d\x98\x87" +
	"`\x1e<\x0b\x00\x00\xff\xff\x8b1q\xfc"

func init() {
	schemas.Register(schema_ec208700833b2f3f,
		0x9c7d523b025c5d0c,
		0xc790ef4f274e678f)
}

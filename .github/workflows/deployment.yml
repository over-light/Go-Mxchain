# This workflows will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflows:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, REGISTRY_HOSTNAME and DEPLOYMENT_NAME environment variables (below).

name: Build and Deploy Testnet

on:
  push:
    branches:
      - deployment_configuration

# Environment variables available to all jobs and steps in this workflows
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_REGION: europe-west4
  GKE_CLUSTER: elrond-testnets-cluster
  IMAGE_NODE: elrond-go-node
  IMAGE_SEEDNODE: elrond-go-seednode
  REGISTRY_HOSTNAME: gcr.io
  BASE_PATH: /home/runner/work/elrond-go/elrond-go/

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout deployment config repo
        uses: actions/checkout@v2
        with:
          repository: elrondnetwork/elrond-k8s-testnet
          path: elrond-k8s-testnet

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '299.0.0'
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_KEY }}

      - name: Create Configs
        run: |
          docker run \
            -v "/home/runner/work/elrond-go/elrond-go/filegenConfig/:/data/" \
            elrondnetwork/elrond-go-filegen \
            -num-of-shards $NUM_OF_SHARDS \
            -num-of-nodes-in-each-shard $NUM_NODES_SHARD \
            -consensus-group-size 4 \
            -num-of-observers-in-each-shard 1  \
            -num-of-metachain-nodes 9 \
            -metachain-consensus-group-size 7 \
            -num-of-observers-in-metachain 1 \
            -chain-id k8s-testnet \
            -hysteresis 0.21 \
            -stake-type delegated

      - name: Prepare Configs
        run: |
            sed 's/\"startTime\":.*/\"startTime\": '"$(date -d '2 minutes' +%s)",'/g' $BASE_PATH/filegenConfig/nodesSetup.json > $BASE_PATH/filegenConfig/nodesSetupUpdated.json
            sed 's/<NUM_NODES>/'$NUM_NODES'/' $BASE_PATH/kube/elrond.yaml > $BASE_PATH/kube/elrond_"$NUM_NODES".yaml
            sed 's/<NUM_OF_SHARDS>/'$NUM_OF_SHARDS'/' $BASE_PATH/kube/observer.yaml > $BASE_PATH/kube/observer_"$NUM_OF_SHARDS".yaml
            ls -lh "/home/runner/work/elrond-go/elrond-go/filegenConfig"
        shell: bash

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      # Build the Docker image
      - name: Build
        run: |
          docker build -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$IMAGE_NODE":"$GITHUB_SHA" \
            -f elrond-k8s-testnet/docker/elrond/Dockerfile \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" .
          docker build -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$IMAGE_SEEDNODE":"$GITHUB_SHA" \
                      -f elrond-k8s-testnet/docker/seednode/Dockerfile \
                      --build-arg GITHUB_SHA="$GITHUB_SHA" \
                      --build-arg GITHUB_REF="$GITHUB_REF" .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |
          docker push $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE_NODE:$GITHUB_SHA
          docker push $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE_SEEDNODE:$GITHUB_SHA

      # Set up kustomize
      - name: Set up Kustomize
        run: |
          curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.8.0/kustomize_3.8.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_REGION --project $GKE_PROJECT
          #regex for namepsace evaluation '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
          export NAMESPACE=$( echo ${{ github.ref }}/${{ github.sha }} | sed -e 's/[[:punct:]]/-/g' | awk '{print tolower(substr($0,0,63))}' )
          kubectl create namespace $NAMESPACE
          kubectl -n $NAMESPACE create configmap elrond-node-config \
                      --from-file=$BASE_PATH/filegenConfig/validatorKey.pem \
                      --from-file=$BASE_PATH/filegenConfig/observerKey.pem \
                      --from-file=$BASE_PATH/filegenConfig/p2p.toml \
                      --from-file=$BASE_PATH/filegenConfig/delegationWalletKey.pem \
                      --from-file=$BASE_PATH/filegenConfig/genesis.json \
                      --from-file=$BASE_PATH/filegenConfig/genesisSmartContracts.json \
                      --from-file=nodesSetup.json=$BASE_PATH/filegenConfig/nodesSetupUpdated.json \
                      --from-file=$BASE_PATH/filegenConfig/walletKey.pem

          ./kustomize edit set image $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE_NODE:${GITHUB_SHA}
          ./kustomize edit set image $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE_SEEDNODE:${GITHUB_SHA}
          ./kustomize edit set replicas elrond-node=50 elrond-seednode=1
          ./kustomize build ./$BASE_PATH/kube/ | kubectl -n $NAMESPACE apply -f -

#Ratings configuration

# proposer-validator importanceRatio = 1 =>
#   50% rating increase from proposer and 50% rating increase from validator

# ProposerIncreaseRatingStep = 1/2 * (maxRating - startRating)/(nrTimesProposerPerHour * hoursToGetToMaxRating)
# ValidatorIncreaseRatingStep = 1/2 * (maxRating - startRating)/(nrTimeValidatorPerHour * hoursToGetToMaxRating)
# ProposerDecreaseRatingStep = -2 * ProposerIncreaseRatingStep
# ValidatorDecreaseRatingStep = -2 * ValidatorIncreaseRatingStep


[General]
    StartRating = 5000001
    MaxRating = 10000000
    MinRating = 1
    HoursToMaxRatingFromStartRating = 72
    SignedBlocksThreshold = 0.01
    SelectionChances = [
        { MaxThreshold = 0, ChancePercent = 5},
        { MaxThreshold = 1000000,ChancePercent = 0},
        { MaxThreshold = 2000000,ChancePercent = 16},
        { MaxThreshold = 3000000,ChancePercent = 17},
        { MaxThreshold = 4000000,ChancePercent = 18},
        { MaxThreshold = 5000000,ChancePercent = 19},
        { MaxThreshold = 6000000,ChancePercent = 20},
        { MaxThreshold = 7000000,ChancePercent = 21},
        { MaxThreshold = 8000000,ChancePercent = 22},
        { MaxThreshold = 9000000,ChancePercent = 23},
        { MaxThreshold = 10000000,ChancePercent = 24},
    ]

[ShardChain.RatingSteps]
    ProposerValidatorImportance = 1.0
    ProposerDecreaseFactor = -4.0
    ValidatorDecreaseFactor = -4.0
    ConsecutiveMissedBlocksPenalty = 1.10

[MetaChain.RatingSteps]
    ProposerValidatorImportance = 1.0
    ProposerDecreaseFactor = -4.0
    ValidatorDecreaseFactor = -4.0
    ConsecutiveMissedBlocksPenalty = 1.10

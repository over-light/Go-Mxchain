[BaseOperationCost]
    StorePerByte    = 10
    DataCopyPerByte = 10

[ElrondAPICost]
    GetOwner           = 10
    GetExternalBalance = 10
    GetBlockHash       = 10
    TransferValue      = 10
    GetArgument        = 10
    GetFunction        = 10
    GetNumArguments    = 10
    StorageStore       = 10
    StorageLoad        = 10
    GetCaller          = 10
    GetCallValue       = 10
    Log                = 10
    Finish             = 10
    SignalError        = 10
    GetBlockTimeStamp  = 10
    GetGasLeft         = 10
    Int64GetArgument   = 10
    Int64StorageStore  = 10
    Int64StorageLoad   = 10
    Int64Finish        = 10
    GetStateRootHash   = 10
    GetBlockNonce      = 10
    GetBlockEpoch      = 10
    GetBlockRound      = 10
    GetBlockRandomSeed = 10

[EthAPICost]
    UseGas              = 10
    GetAddress          = 10
    GetExternalBalance  = 10
    GetBlockHash        = 10
    Call                = 10
    CallDataCopy        = 10
    GetCallDataSize     = 10
    CallCode            = 10
    CallDelegate        = 10
    CallStatic          = 10
    StorageStore        = 10
    StorageLoad         = 10
    GetCaller           = 10
    GetCallValue        = 10
    CodeCopy            = 10
    GetCodeSize         = 10
    GetBlockCoinbase    = 10
    Create              = 10
    GetBlockDifficulty  = 10
    ExternalCodeCopy    = 10
    GetExternalCodeSize = 10
    GetGasLeft          = 10
    GetBlockGasLimit    = 10
    GetTxGasPrice       = 10
    Log                 = 10
    GetBlockNumber      = 10
    GetTxOrigin         = 10
    Finish              = 10
    Revert              = 10
    GetReturnDataSize   = 10
    ReturnDataCopy      = 10
    SelfDestruct        = 10
    GetBlockTimeStamp   = 10

[BigIntAPICost]
    BigIntNew                = 10
    BigIntByteLength         = 10
    BigIntGetBytes           = 10
    BigIntSetBytes           = 10
    BigIntIsInt64            = 10
    BigIntGetInt64           = 10
    BigIntSetInt64           = 10
    BigIntAdd                = 10
    BigIntSub                = 10
    BigIntMul                = 10
    BigIntCmp                = 10
    BigIntFinish             = 10
    BigIntStorageLoad        = 10
    BigIntStorageStore       = 10
    BigIntGetArgument        = 10
    BigIntGetCallValue       = 10
    BigIntGetExternalBalance = 10

[CryptoAPICost]
    SHA256    = 10
    Keccak256 = 10

[WASMOpcodeCost]
    Unreachable = 1
    Nop = 1
    Block = 1
    Loop = 1
    If = 1
    Else = 2
    End = 2
    Br = 2
    BrIf = 3
    BrTable = 2
    Return = 2
    Call = 2
    CallIndirect = 2
    Drop = 9
    Select = 9
    GetLocal = 9
    SetLocal = 9
    TeeLocal = 9
    GetGlobal = 9
    SetGlobal = 9
    I32Load = 9
    I64Load = 9
    F32Load = 18
    F64Load = 18
    I32Load8S = 9
    I32Load8U = 9
    I32Load16S = 9
    I32Load16U = 9
    I64Load8S = 9
    I64Load8U = 9
    I64Load16S = 9
    I64Load16U = 9
    I64Load32S = 9
    I64Load32U = 9
    I32Store = 9
    I64Store = 9
    F32Store = 18
    F64Store = 18
    I32Store8 = 9
    I32Store16 = 9
    I64Store8 = 9
    I64Store16 = 9
    I64Store32 = 9
    MemorySize = 5
    MemoryGrow = 5
    I32Const = 1
    I64Const = 1
    F32Const = 1
    F64Const = 1
    RefNull = 1
    RefIsNull = 1
    I32Eqz = 1
    I32Eq = 1
    I32Ne = 1
    I32LtS = 1
    I32LtU = 1
    I32GtS = 1
    I32GtU = 1
    I32LeS = 1
    I32LeU = 1
    I32GeS = 1
    I32GeU = 1
    I64Eqz = 1
    I64Eq = 1
    I64Ne = 1
    I64LtS = 1
    I64LtU = 1
    I64GtS = 1
    I64GtU = 1
    I64LeS = 1
    I64LeU = 1
    I64GeS = 1
    I64GeU = 1
    F32Eq = 6
    F32Ne = 6
    F32Lt = 6
    F32Gt = 6
    F32Le = 6
    F32Ge = 6
    F64Eq = 6
    F64Ne = 6
    F64Lt = 6
    F64Gt = 6
    F64Le = 6
    F64Ge = 6
    I32Clz = 100
    I32Ctz = 100
    I32Popcnt = 100
    I32Add = 1
    I32Sub = 1
    I32Mul = 9
    I32DivS = 80
    I32DivU = 80
    I32RemS = 80
    I32RemU = 80
    I32And = 1
    I32Or = 1
    I32Xor = 1
    I32Shl = 3
    I32ShrS = 3
    I32ShrU = 3
    I32Rotl = 5
    I32Rotr = 5
    I64Clz = 100
    I64Ctz = 100
    I64Popcnt = 100
    I64Add = 1
    I64Sub = 1
    I64Mul = 9
    I64DivS = 80
    I64DivU = 80
    I64RemS = 80
    I64RemU = 80
    I64And = 1
    I64Or = 1
    I64Xor = 1
    I64Shl = 3
    I64ShrS = 3
    I64ShrU = 3
    I64Rotl = 5
    I64Rotr = 5
    F32Abs = 5
    F32Neg = 5
    F32Ceil = 100
    F32Floor = 100
    F32Trunc = 100
    F32Nearest = 100
    F32Sqrt = 100
    F32Add = 5
    F32Sub = 5
    F32Mul = 15
    F32Div = 100
    F32Min = 15
    F32Max = 15
    F32Copysign = 5
    F64Abs = 5
    F64Neg = 5
    F64Ceil = 100
    F64Floor = 100
    F64Trunc = 100
    F64Nearest = 100
    F64Sqrt = 100
    F64Add = 5
    F64Sub = 5
    F64Mul = 15
    F64Div = 100
    F64Min = 15
    F64Max = 15
    F64Copysign = 5
    I32WrapI64 = 9
    I32TruncSF32 = 100
    I32TruncUF32 = 100
    I32TruncSF64 = 100
    I32TruncUF64 = 100
    I64ExtendSI32 = 9
    I64ExtendUI32 = 9
    I64TruncSF32 = 100
    I64TruncUF32 = 100
    I64TruncSF64 = 100
    I64TruncUF64 = 100
    F32ConvertSI32 = 100
    F32ConvertUI32 = 100
    F32ConvertSI64 = 100
    F32ConvertUI64 = 100
    F32DemoteF64 = 100
    F64ConvertSI32 = 100
    F64ConvertUI32 = 100
    F64ConvertSI64 = 100
    F64ConvertUI64 = 100
    F64PromoteF32 = 100
    I32ReinterpretF32 = 100
    I64ReinterpretF64 = 100
    F32ReinterpretI32 = 100
    F64ReinterpretI64 = 100
    I32Extend8S = 9
    I32Extend16S = 9
    I64Extend8S = 9
    I64Extend16S = 9
    I64Extend32S = 9
    I32TruncSSatF32 = 100
    I32TruncUSatF32 = 100
    I32TruncSSatF64 = 100
    I32TruncUSatF64 = 100
    I64TruncSSatF32 = 100
    I64TruncUSatF32 = 100
    I64TruncSSatF64 = 100
    I64TruncUSatF64 = 100
    MemoryInit = 5
    DataDrop = 5
    MemoryCopy = 5
    MemoryFill = 5
    TableInit = 10
    ElemDrop = 10
    TableCopy = 10
    TableGet = 10
    TableSet = 10
    TableGrow = 10
    TableSize = 10
    Wake = 10
    I32Wait = 10
    I64Wait = 10
    Fence = 10
    I32AtomicLoad = 15
    I64AtomicLoad = 15
    I32AtomicLoad8U = 15
    I32AtomicLoad16U = 15
    I64AtomicLoad8U = 15
    I64AtomicLoad16U = 15
    I64AtomicLoad32U = 15
    I32AtomicStore = 15
    I64AtomicStore = 15
    I32AtomicStore8 = 15
    I32AtomicStore16 = 15
    I64AtomicStore8 = 15
    I64AtomicStore16 = 15
    I64AtomicStore32 = 15
    I32AtomicRmwAdd = 20
    I64AtomicRmwAdd = 20
    I32AtomicRmw8UAdd = 20
    I32AtomicRmw16UAdd = 20
    I64AtomicRmw8UAdd = 20
    I64AtomicRmw16UAdd = 20
    I64AtomicRmw32UAdd = 20
    I32AtomicRmwSub = 20
    I64AtomicRmwSub = 20
    I32AtomicRmw8USub = 20
    I32AtomicRmw16USub = 20
    I64AtomicRmw8USub = 20
    I64AtomicRmw16USub = 20
    I64AtomicRmw32USub = 20
    I32AtomicRmwAnd = 15
    I64AtomicRmwAnd = 15
    I32AtomicRmw8UAnd = 15
    I32AtomicRmw16UAnd = 15
    I64AtomicRmw8UAnd = 15
    I64AtomicRmw16UAnd = 15
    I64AtomicRmw32UAnd = 15
    I32AtomicRmwOr = 15
    I64AtomicRmwOr = 15
    I32AtomicRmw8UOr = 15
    I32AtomicRmw16UOr = 15
    I64AtomicRmw8UOr = 15
    I64AtomicRmw16UOr = 15
    I64AtomicRmw32UOr = 15
    I32AtomicRmwXor = 15
    I64AtomicRmwXor = 15
    I32AtomicRmw8UXor = 15
    I32AtomicRmw16UXor = 15
    I64AtomicRmw8UXor = 15
    I64AtomicRmw16UXor = 15
    I64AtomicRmw32UXor = 15
    I32AtomicRmwXchg = 30
    I64AtomicRmwXchg = 30
    I32AtomicRmw8UXchg = 30
    I32AtomicRmw16UXchg = 30
    I64AtomicRmw8UXchg = 30
    I64AtomicRmw16UXchg = 30
    I64AtomicRmw32UXchg = 30
    I32AtomicRmwCmpxchg = 30
    I64AtomicRmwCmpxchg = 30
    I32AtomicRmw8UCmpxchg = 30
    I32AtomicRmw16UCmpxchg = 30
    I64AtomicRmw8UCmpxchg = 30
    I64AtomicRmw16UCmpxchg = 30
    I64AtomicRmw32UCmpxchg = 30
    V128Load = 18
    V128Store = 18
    V128Const = 18
    I8x16Splat = 20
    I8x16ExtractLaneS = 20
    I8x16ExtractLaneU = 20
    I8x16ReplaceLane = 20
    I16x8Splat = 20
    I16x8ExtractLaneS = 20
    I16x8ExtractLaneU = 20
    I16x8ReplaceLane = 20
    I32x4Splat = 20
    I32x4ExtractLane = 20
    I32x4ReplaceLane = 20
    I64x2Splat = 20
    I64x2ExtractLane = 20
    I64x2ReplaceLane = 20
    F32x4Splat = 120
    F32x4ExtractLane = 120
    F32x4ReplaceLane = 120
    F64x2Splat = 120
    F64x2ExtractLane = 120
    F64x2ReplaceLane = 120
    I8x16Eq = 30
    I8x16Ne = 30
    I8x16LtS = 40
    I8x16LtU = 40
    I8x16GtS = 40
    I8x16GtU = 40
    I8x16LeS = 40
    I8x16LeU = 40
    I8x16GeS = 40
    I8x16GeU = 40
    I16x8Eq = 30
    I16x8Ne = 30
    I16x8LtS = 40
    I16x8LtU = 40
    I16x8GtS = 40
    I16x8GtU = 40
    I16x8LeS = 40
    I16x8LeU = 40
    I16x8GeS = 40
    I16x8GeU = 40
    I32x4Eq = 30
    I32x4Ne = 30
    I32x4LtS = 40
    I32x4LtU = 40
    I32x4GtS = 40
    I32x4GtU = 40
    I32x4LeS = 40
    I32x4LeU = 40
    I32x4GeS = 40
    I32x4GeU = 40
    F32x4Eq = 120
    F32x4Ne = 120
    F32x4Lt = 120
    F32x4Gt = 120
    F32x4Le = 120
    F32x4Ge = 120
    F64x2Eq = 120
    F64x2Ne = 120
    F64x2Lt = 120
    F64x2Gt = 120
    F64x2Le = 120
    F64x2Ge = 120
    V128Not = 40
    V128And = 40
    V128Or = 40
    V128Xor = 40
    V128Bitselect = 40
    I8x16Neg = 20
    I8x16AnyTrue = 20
    I8x16AllTrue = 20
    I8x16Shl = 30
    I8x16ShrS = 30
    I8x16ShrU = 30
    I8x16Add = 20
    I8x16AddSaturateS = 20
    I8x16AddSaturateU = 20
    I8x16Sub = 20
    I8x16SubSaturateS = 20
    I8x16SubSaturateU = 20
    I8x16Mul = 80
    I16x8Neg = 40
    I16x8AnyTrue = 40
    I16x8AllTrue = 40
    I16x8Shl = 30
    I16x8ShrS = 30
    I16x8ShrU = 30
    I16x8Add = 20
    I16x8AddSaturateS = 20
    I16x8AddSaturateU = 20
    I16x8Sub = 20
    I16x8SubSaturateS = 20
    I16x8SubSaturateU = 20
    I16x8Mul = 40
    I32x4Neg = 20
    I32x4AnyTrue = 20
    I32x4AllTrue = 20
    I32x4Shl = 30
    I32x4ShrS = 30
    I32x4ShrU = 30
    I32x4Add = 20
    I32x4Sub = 20
    I32x4Mul = 80
    I64x2Neg = 40
    I64x2AnyTrue = 20
    I64x2AllTrue = 20
    I64x2Shl = 30
    I64x2ShrS = 30
    I64x2ShrU = 30
    I64x2Add = 20
    I64x2Sub = 20
    F32x4Abs = 200
    F32x4Neg = 200
    F32x4Sqrt = 1000
    F32x4Add = 200
    F32x4Sub = 200
    F32x4Mul = 800
    F32x4Div = 1000
    F32x4Min = 500
    F32x4Max = 500
    F64x2Abs = 500
    F64x2Neg = 400
    F64x2Sqrt = 1000
    F64x2Add = 200
    F64x2Sub = 200
    F64x2Mul = 800
    F64x2Div = 1000
    F64x2Min = 500
    F64x2Max = 500
    I32x4TruncSF32x4Sat = 1000
    I32x4TruncUF32x4Sat = 1000
    I64x2TruncSF64x2Sat = 1000
    I64x2TruncUF64x2Sat = 1000
    F32x4ConvertSI32x4 = 1000
    F32x4ConvertUI32x4 = 1000
    F64x2ConvertSI64x2 = 1000
    F64x2ConvertUI64x2 = 1000
    V8x16Swizzle = 1200
    V8x16Shuffle = 1200
    I8x16LoadSplat = 40
    I16x8LoadSplat = 40
    I32x4LoadSplat = 40
    I64x2LoadSplat = 40

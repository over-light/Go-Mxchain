# GeneralSettings section of the node
[GeneralSettings]
   # DestinationShardAsObserver represents the desired shard when running as observer
   # value will be given as string. For example: "0", "1", "15", "metachain"
   DestinationShardAsObserver = "0"

[Explorer]
    Enabled = false
    IndexerURL = "http://localhost:9200"

[MiniBlocksStorage]
    [MiniBlocksStorage.Cache]
        Size = 1000
        Type = "LRU"
    [MiniBlocksStorage.DB]
        FilePath = "MiniBlocks"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 30
        MaxBatchSize = 10

[PeerBlockBodyStorage]
    [PeerBlockBodyStorage.Cache]
        Size = 100
        Type = "LRU"
    [PeerBlockBodyStorage.DB]
        FilePath = "PeerBlocks"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 30
        MaxBatchSize = 10

[BlockHeaderStorage]
    [BlockHeaderStorage.Cache]
        Size = 100
        Type = "LRU"
    [BlockHeaderStorage.DB]
        FilePath = "BlockHeaders"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 30
        MaxBatchSize = 10

[ShardDataStorage]
    [ShardDataStorage.Cache]
        Size = 1000
        Type = "LRU"
    [ShardDataStorage.DB]
        FilePath = "ShardData"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 30
        MaxBatchSize = 10

[PeerDataStorage]
    [PeerDataStorage.Cache]
        Size = 100
        Type = "LRU"
    [PeerDataStorage.DB]
        FilePath = "PeerData"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 30
        MaxBatchSize = 10

[MetaBlockStorage]
    [MetaBlockStorage.Cache]
        Size = 100
        Type = "LRU"
    [MetaBlockStorage.DB]
        FilePath = "MetaBlock"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 30
        MaxBatchSize = 10

[TxStorage]
    [TxStorage.Cache]
        Size = 100000
        Type = "LRU"
    [TxStorage.DB]
        FilePath = "Transactions"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 10
        MaxBatchSize = 30000

[SmartContractResultStorage]
    [SmartContractResult.Cache]
        Size = 100000
        Type = "LRU"
    [SmartContractResultStorage.DB]
        FilePath = "SmartContractResult"
        Type = "LvlDB"
        BatchDelaySeconds = 10
        MaxBatchSize = 5000

[AccountsTrieStorage]
    [AccountsTrieStorage.Cache]
        Size = 100000
        Type = "LRU"
    [AccountsTrieStorage.DB]
        FilePath = "AccountsTrie"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 10
        MaxBatchSize = 30000

    [AccountsTrieStorage.Bloom]
        Size = 2048
        HashFunc = ["Keccak", "Blake2b", "Fnv"]

[BadBlocksCache]
    Size = 100
    Type = "FIFOSharded"
    Shards = 128

[TxBlockBodyDataPool]
    Size = 100
    Type = "FIFOSharded"
    Shards = 128

[StateBlockBodyDataPool]
    Size = 100
    Type = "FIFOSharded"
    Shards = 128

[PeerBlockBodyDataPool]
    Size = 10000
    Type = "FIFOSharded"
    Shards = 128

[BlockHeaderDataPool]
    Size = 10000
    Type = "FIFOSharded"
    Shards = 128

[BlockHeaderNoncesDataPool]
    Size = 100000
    Type = "FIFOSharded"
    Shards = 128

[MetaHeaderNoncesDataPool]
    Size = 100000
    Type = "FIFOSharded"
    Shards = 128

[TxDataPool]
    Size = 100000
    Type = "FIFOSharded"
    Shards = 128

[SmartContractDataPool]
    Size = 100000
    Type = "LRU"

[ShardHeadersDataPool]
    Size = 10000
    Type = "FIFOSharded"
    Shards = 128

[MiniBlockHeaderHashesDataPool]
    Size = 10000
    Type = "FIFOSharded"
    Shards = 128

[MetaBlockBodyDataPool]
    Size = 1000
    Type = "FIFOSharded"
    Shards = 128

[Logger]
    Path = "logs"
    StackTraceDepth = 2

[Address]
    Length = 32
    Prefix = "0x"

[Hasher]
   Type = "blake2b"

[MultisigHasher]
   Type = "blake2b"

[Marshalizer]
   Type = "json"

# ResourceStats, if enabled, will output in a folder called "stats"
# resource statistics. For example: number of active go routines, memory allocation, number of GC sweeps, etc.
# RefreshIntervalInSec will tell how often a new line containing stats should be added in stats file
[ResourceStats]
   Enabled = true
   RefreshIntervalInSec = 30

# Heartbeat, if enabled, will output a heartbeat singal once x seconds,
# where x in [MinTimeToWaitBetweenBroadcastsInSec, MaxTimeToWaitBetweenBroadcastsInSec)
[Heartbeat]
   Enabled = true
   MinTimeToWaitBetweenBroadcastsInSec = 20
   MaxTimeToWaitBetweenBroadcastsInSec = 25
   DurationInSecToConsiderUnresponsive = 60

# Consensus type which will be used (the current implementation can manage "bn" and "bls")
# When consensus type is "bls" the multisig hasher type should be "blake2b"
[Consensus]
   Type = "bls"

[NTPConfig]
   Host = "time.google.com"
   Port = 123
   Timeout = 0  # Setting 0 means 'use default value'
   Version = 0  # Setting 0 means 'use default value'

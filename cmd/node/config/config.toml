# GeneralSettings section of the node
[GeneralSettings]
   # StatusPollingIntervalSec represents the no of seconds between multiple polling for the status for AppStatusHandler
   StatusPollingIntervalSec = 2

   # MaxComputableRounds represents the max number of rounds computable in a round
   # by the validator statistics processor
   MaxComputableRounds = 100

   # StartInEpochEnabled represents that the fast bootstrap mechanism from the network is enabled if data is not
   # available in local disk
   StartInEpochEnabled = true

[StoragePruning]
   # If the Enabled flag is set to false, then the storers won't divide epochs into separate dbs
   Enabled = true

   # If this flag is set to true, the node won't delete any database between epochs
   FullArchive = false

   # NumEpochsToKeep - if the flag above is set to false, this will set the number of epochs to keep in the storage.
   # Epochs older that (current epoch - NumOfEpochsToKeep) will be removed
   NumEpochsToKeep = 3

   # NumActivePersisters - this will set the number of persisters to keep active at a moment. This works for both
   # full archive or not nodes. In case of a node which doesn't have a full archive, it has to be smaller or equal
   # to the NumOfEpochsToKeep flag
   NumActivePersisters = 2

[MiniBlocksStorage]
    [MiniBlocksStorage.Cache]
        Size = 300
        Type = "LRU"
    [MiniBlocksStorage.DB]
        FilePath = "MiniBlocks"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 100
        MaxOpenFiles = 10

[PeerBlockBodyStorage]
    [PeerBlockBodyStorage.Cache]
        Size = 1000
        Type = "LRU"
    [PeerBlockBodyStorage.DB]
        FilePath = "PeerBlocks"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 100
        MaxOpenFiles = 10

[BlockHeaderStorage]
    [BlockHeaderStorage.Cache]
        Size = 1000
        Type = "LRU"
    [BlockHeaderStorage.DB]
        FilePath = "BlockHeaders"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 1
        MaxOpenFiles = 10

[BootstrapStorage]
    [BootstrapStorage.Cache]
        Size = 1000
        Type = "LRU"
    [BootstrapStorage.DB]
        FilePath = "BootstrapData"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 1
        MaxOpenFiles = 10

[MetaBlockStorage]
    [MetaBlockStorage.Cache]
        Size = 1000
        Type = "LRU"
    [MetaBlockStorage.DB]
        FilePath = "MetaBlock"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 1
        MaxOpenFiles = 10

[TxStorage]
    [TxStorage.Cache]
        Size = 75000
        Type = "LRU"
    [TxStorage.DB]
        FilePath = "Transactions"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 20000
        MaxOpenFiles = 10

[TxLogsStorage]
    [TxLogsStorage.Cache]
        Size = 1000
        Type = "LRU"
    [TxLogsStorage.DB]
        FilePath = "Logs"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 100
        MaxOpenFiles = 10

[UnsignedTransactionStorage]
    [UnsignedTransactionStorage.Cache]
        Size = 75000
        Type = "LRU"
    [UnsignedTransactionStorage.DB]
        FilePath = "UnsignedTransactions"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 20000
        MaxOpenFiles = 10

[RewardTxStorage]
    [RewardTxStorage.Cache]
        Size = 75000
        Type = "LRU"
    [RewardTxStorage.DB]
        FilePath = "RewardTransactions"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 20000
        MaxOpenFiles = 10

[StatusMetricsStorage]
    [StatusMetricsStorage.Cache]
        Size = 1000
        Type = "LRU"
    [StatusMetricsStorage.DB]
        FilePath = "StatusMetricsStorageDB"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 100
        MaxOpenFiles = 10

[ShardHdrNonceHashStorage]
    [ShardHdrNonceHashStorage.Cache]
        Size = 1000
        Type = "LRU"
    [ShardHdrNonceHashStorage.DB]
        FilePath = "ShardHdrHashNonce"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 1
        MaxOpenFiles = 10

[MetaHdrNonceHashStorage]
    [MetaHdrNonceHashStorage.Cache]
        Size = 1000
        Type = "LRU"
    [MetaHdrNonceHashStorage.DB]
        FilePath = "MetaHdrHashNonce"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 1
        MaxOpenFiles = 10

[AccountsTrieStorage]
    [AccountsTrieStorage.Cache]
        Size = 75000
        Type = "LRU"
    [AccountsTrieStorage.DB]
        FilePath = "AccountsTrie/MainDB"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 45000
        MaxOpenFiles = 10

[EvictionWaitingList]
    Size = 1000
    [EvictionWaitingList.DB]
        FilePath = "EvictionWaitingList"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 100
        MaxOpenFiles = 10

[TrieSnapshotDB]
     FilePath = "TrieSnapshot"
     Type = "LvlDBSerial"
     BatchDelaySeconds = 2
     MaxBatchSize = 40000
     MaxOpenFiles = 10

[TrieStorageManagerConfig]
    PruningBufferLen = 1000
    SnapshotsBufferLen = 10
    MaxSnapshots = 2

[PeerAccountsTrieStorage]
    [PeerAccountsTrieStorage.Cache]
        Size = 5000
        Type = "LRU"
    [PeerAccountsTrieStorage.DB]
        FilePath = "PeerAccountsTrie/MainDB"
        Type = "LvlDBSerial"
        BatchDelaySeconds = 2
        MaxBatchSize = 1000
        MaxOpenFiles = 10

[HeadersPoolConfig]
    MaxHeadersPerShard = 1000
    NumElementsToRemoveOnEviction = 200

[BadBlocksCache]
    Size = 1000
    Type = "LRU"

[TxBlockBodyDataPool]
    Size = 300
    Type = "LRU"

[PeerBlockBodyDataPool]
    Size = 1000
    Type = "LRU"

[TxDataPool]
    Size = 900000
    SizeInBytes = 524288000
    Type = "TxCache"
    Shards = 16

[TrieNodesDataPool]
    Size = 50000
    Type = "LRU"

[WhiteListPool]
    Size = 100000
    Type = "FIFOSharded"
    Shards = 10

[UnsignedTransactionDataPool]
    Size = 75000
    Type = "LRU"

[RewardTransactionDataPool]
    Size = 75000
    Type = "LRU"

#PublicKeyPeerId represents the main cache used to map Elrond block signing public keys to their associated peer id's.
[PublicKeyPeerId]
    Size = 30000
    Type = "LRU"

#PublicKeyShardId is the fallback cache used to map public keys to the shard they belong.
[PublicKeyShardId]
    Size = 30000
    Type = "LRU"

#PeerIdShardId is the fallback cache used in network sharding to allow direct connection between peer id and shard.
# Used mainly for observers.
[PeerIdShardId]
    Size = 30000
    Type = "LRU"

[Antiflood]
    Enabled = true
    NumConcurrentResolverJobs = 50
    [Antiflood.NetworkMaxInput]
        MessagesPerSecond = 400
        TotalSizePerSecond = 4194304
    [Antiflood.PeerMaxInput]
        MessagesPerSecond = 75
        TotalSizePerSecond = 2097152
    [Antiflood.PeerMaxOutput]
        MessagesPerSecond = 75
        TotalSizePerSecond = 2097152
    [Antiflood.Cache]
        Size = 5000
        Type = "LRU"
    [Antiflood.Topic]
        DefaultMaxMessagesPerSec = 10000
        MaxMessages = [{ Topic = "heartbeat", NumMessagesPerSec = 10 },
                       { Topic = "shardBlocks*", NumMessagesPerSec = 20 },
                       { Topic = "metachainBlocks", NumMessagesPerSec = 20 }]
    [Antiflood.BlackList]
        ThresholdNumMessagesPerSecond = 150
        ThresholdSizePerSecond = 4194304
        NumFloodingRounds = 10
        PeerBanDurationInSeconds = 300
    [Antiflood.WebServer]
        # SimultaneousRequests represents the number of concurrent requests accepted by the web server
        # this is a global throttler that acts on all http connections regardless of the originating source
        SimultaneousRequests = 100
        # SameSourceRequests defines how many requests are allowed from the same source in the specified
        # time frame (SameSourceResetIntervalInSec)
        SameSourceRequests = 10000
        # SameSourceResetIntervalInSec time frame between counter reset, in seconds
        SameSourceResetIntervalInSec = 1
    [Antiflood.TxAccumulator]
        # MaxAllowedTimeInMilliseconds is used as a time frame in which the node gathers transactions.
        # After this period, collected transactions will be sent on the p2p topics
        MaxAllowedTimeInMilliseconds = 250
        # MaxDeviationTimeInMilliseconds represents the time in miliseconds that will cause the effectual time frame be
        # less than the specified max value. This is used to create desynchronizations between senders as to not
        # clutter the network exactly in the same moment
        MaxDeviationTimeInMilliseconds = 25

[Logger]
    Path = "logs"
    StackTraceDepth = 2

[AddressPubkeyConverter]
    Length = 32
    Type = "bech32"
    SignatureLength = 0

[ValidatorPubkeyConverter]
    Length = 96
    Type = "hex"
    SignatureLength = 48

[Hasher]
   Type = "blake2b"

[MultisigHasher]
   Type = "blake2b"

# The main marshalizer, used in internodes communication
# Type identifies the marshalizer
# SizeCheckDelta the maximum allow drift between the input data buffer and
#     the reencoded version (in percents).
#     0 disables the feature.
[Marshalizer]
   Type = "gogo protobuf"
   SizeCheckDelta = 0

# The marshalizer used for smartcontracts data exchange
[VmMarshalizer]
   Type = "json"

# The marshalizer used in transaction signing
[TxSignMarshalizer]
   Type = "json"

# TODO: change this config to real numbers before merging to development
[EpochStartConfig]
    MinRoundsBetweenEpochs = 200
    RoundsPerEpoch         = 200
    # ShuffledOutRestartThreshold represents the maximum duration of an epoch (in percentage) after a node which
    # has been shuffled out has to restart its process in order to start in a new shard
    ShuffledOutRestartThreshold = 0.25

# ResourceStats, if enabled, will output in a folder called "stats"
# resource statistics. For example: number of active go routines, memory allocation, number of GC sweeps, etc.
# RefreshIntervalInSec will tell how often a new line containing stats should be added in stats file
[ResourceStats]
   Enabled = true
   RefreshIntervalInSec = 30

# Heartbeat, if enabled, will output a heartbeat singal once x seconds,
# where x in [MinTimeToWaitBetweenBroadcastsInSec, MaxTimeToWaitBetweenBroadcastsInSec)
[Heartbeat]
   Enabled = true
   MinTimeToWaitBetweenBroadcastsInSec  = 20
   MaxTimeToWaitBetweenBroadcastsInSec  = 25
   HbmiRefreshIntervalInSec             = 60
   HideInactiveValidatorIntervalInHours = 24
   PeerTypeRefreshIntervalInSec         = 60
   DurationInSecToConsiderUnresponsive  = 60
   [Heartbeat.HeartbeatStorage]
       [Heartbeat.HeartbeatStorage.Cache]
           Size = 1000
           Type = "LRU"
       [Heartbeat.HeartbeatStorage.DB]
           FilePath = "HeartbeatStorage"
           Type = "LvlDBSerial"
           BatchDelaySeconds = 5
           MaxBatchSize = 100
           MaxOpenFiles = 10

# Consensus type which will be used (the current implementation can manage "bn" and "bls")
# When consensus type is "bls" the multisig hasher type should be "blake2b"
[Consensus]
   Type = "bls"

[NTPConfig]
   Hosts = ["time.google.com", "time.cloudflare.com",  "time.apple.com", "time.windows.com"]
   Port = 123
   TimeoutMilliseconds = 100
   SyncPeriodSeconds = 3600
   Version = 0  # Setting 0 means 'use default value'

[StateTriesConfig]
    CheckpointRoundsModulus = 100
    AccountsStatePruningEnabled = true
    PeerStatePruningEnabled = true

[BlockSizeThrottleConfig]
    MinSizeInBytes = 104857 # 104857 is 10% from 1MB
    MaxSizeInBytes = 943718 # 943718 is 90% from 1MB

[VirtualMachineConfig]
    OutOfProcessEnabled = true
    [VirtualMachineConfig.OutOfProcessConfig]
        LogsMarshalizer = "json"
        MessagesMarshalizer = "json"
        MaxLoopTime = 1000

[Hardfork]
    EnableTrigger = true
    EnableTriggerFromP2P = true
    PublicKeyToListenFrom = "b5ea539180627040b2703cabde8ebece0ded59a0c9d2d4a8a73a299fb7bc11d36ac3d1a620501c230059cffa983a7419d192a50ca55ed8aa07254658dda27aba1e54f50fd7cfbb9e66ce1715d72f9c1b0b05272388f9825742161a211debff15"

[Debug]
    [Debug.InterceptorResolver]
        Enabled = true
        CacheSize = 10000
        EnablePrint	= true
        IntervalAutoPrintInSeconds = 20
        NumRequestsThreshold = 9
        NumResolveFailureThreshold = 3
        DebugLineExpiration = 10 #Will remove the debug line after a `DebugLineExpiration` number of prints
